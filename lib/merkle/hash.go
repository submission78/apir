// Note: original file  modified

// Copyright Â© 2019 Weald Technology Trading
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package merkle

import (
	"hash"

	"lukechampine.com/blake3"
)

// HashType defines the interface that must be supplied by hash functions
type HashType interface {
	// Hash calculates the hash of a given input
	Hash([]byte, []byte) []byte

	// HashLength provides the length of the hash
	HashLength() int
}

type BLAKE3 struct {
	hasher hash.Hash
}

// New creates a new SHA256 hashing method
func NewBLAKE3() *BLAKE3 {
	h := blake3.New(32, nil)
	return &BLAKE3{hasher: h}
}

// HashLength returns the length of hashes generated by Hash() in bytes
func (h *BLAKE3) HashLength() int {
	return h.hasher.Size()
}

// Hash generates a BLAKE3 hash from input byte arrays
func (h *BLAKE3) Hash(a, b []byte) []byte {
	h.hasher.Reset()
	h.hasher.Write(a)
	h.hasher.Write(b)
	return h.hasher.Sum(nil)
}
